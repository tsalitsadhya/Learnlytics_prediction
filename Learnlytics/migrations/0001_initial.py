# Generated by Django 5.2.1 on 2025-05-30 03:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActivityType",
            fields=[
                ("type_id", models.AutoField(primary_key=True, serialize=False)),
                ("type_name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "activity_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                ("course_name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "course",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CourseActivity",
            fields=[
                ("activity_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "activity_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("activity_start_date", models.DateTimeField(blank=True, null=True)),
                ("activity_end_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "course_activity",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                ("enroll_id", models.AutoField(primary_key=True, serialize=False)),
                ("grade", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "enrollment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InterestType",
            fields=[
                ("interes_id", models.AutoField(primary_key=True, serialize=False)),
                ("interes_name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "interes_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                ("stu_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "student",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StudentActivityLog",
            fields=[
                ("log_id", models.AutoField(primary_key=True, serialize=False)),
                ("activity_start", models.DateTimeField(blank=True, null=True)),
                ("activity_end", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "student_activity_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CourseAct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_id", models.CharField(max_length=50)),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("forum", "Discussion Forum"),
                            ("task", "Assignment"),
                            ("video", "Learning Video"),
                            ("quiz", "Quiz"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                (
                    "duration",
                    models.PositiveIntegerField(help_text="Duration in minutes"),
                ),
            ],
            options={
                "db_table": "student_learning_courseactivity",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="LearningProfile",
            fields=[
                (
                    "student_id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                (
                    "avg_duration",
                    models.FloatField(
                        verbose_name="Average Learning Duration (minutes)"
                    ),
                ),
                (
                    "sessions_per_week",
                    models.FloatField(verbose_name="Sessions per Week"),
                ),
                (
                    "night_activity_freq",
                    models.FloatField(verbose_name="Night Activity Frequency"),
                ),
                (
                    "forum_vs_task",
                    models.FloatField(verbose_name="Forum vs Task Ratio"),
                ),
                (
                    "learning_type",
                    models.CharField(max_length=20, verbose_name="Learning Type"),
                ),
                ("cluster", models.IntegerField(verbose_name="Cluster")),
            ],
            options={
                "db_table": "student_learning_learningprofile",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="ModelInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model_name", models.CharField(max_length=100)),
                (
                    "model_file",
                    models.FileField(blank=True, null=True, upload_to="models/"),
                ),
                ("training_data", models.CharField(max_length=255)),
                ("training_date", models.DateTimeField()),
                ("model_summary", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("activity", models.CharField(max_length=100)),
                ("grade", models.IntegerField()),
            ],
            options={
                "db_table": "learnlytics_useractivity",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UserInput",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "interes_name_1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "interes_name_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "last_course_1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("score_last_course_1", models.FloatField(blank=True, null=True)),
                (
                    "last_course_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("score_last_course_2", models.FloatField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "Learnlytics_userinput",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                ("session_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("student_id", models.CharField(max_length=50)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(default=None, null=True)),
            ],
            options={
                "db_table": "student_learning_studentactivitylog",
                "indexes": [
                    models.Index(
                        fields=["student_id"], name="student_lea_student_cdb172_idx"
                    ),
                    models.Index(
                        fields=["start_time"], name="student_lea_start_t_031f99_idx"
                    ),
                ],
            },
        ),
    ]
